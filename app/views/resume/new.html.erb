<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      background-color: rgba(50, 50, 50, 1.0);
      color: white;
      font-family: Verdana, sans-serif;
    }

    #typing-container {
      margin: 0 auto;
      word-wrap: break-word;
      text-align: left;
      height: 240px;
    }

    p {
      font-size: 20px;
      line-height: 1.6;
      overflow: hidden;
      display: inline-block;
      margin: 0;
    }

    .upload-paragraph {
      margin-bottom: 20px; /* Adjust the margin-bottom as needed */
      margin-top: -16px;
    }

    .rectangle {
      border: 1px solid white;
      border-radius: 10px; /* Adjust the border radius as needed */
      padding: 10px; /* Adjust the padding as needed */
      box-shadow: 0 0 15px rgba(98, 158, 202, 0.5); /* Glow effect */
      height: 300px; /* Adjust the height as needed */
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;
    } 

    .field {
      margin-bottom: 10px; /* Adjust the margin-bottom as needed */
    }

    .white-background {
      background-color: white;
      color: black;
      width: calc(100% - 20px); /* Adjust the width as needed */
      margin: 0 auto; /* Center the text area */
      height: 226px;
    }

    .label-wrapper {
      text-align: center;
      margin-bottom: 10px; /* Adjust as needed for vertical spacing */
      font-weight: bold;
    }

    .upload-label {
      margin-bottom: 86px; /* Add a bottom margin to this label */
    }

    #upload-button {
      width: 200px; /* Adjust the width as needed */
      background-color: white;
      color: black;
      border: 1px solid white;
      border-radius: 10px;
      padding: 10px;
      box-shadow: 0 0 105px rgba(255, 255, 25598, 158, 202, 0.5); /* Glow effect */
      margin-top: 20px;
    }

    .typing-char {
      color: rgba(98, 158, 202, 1);
      animation: colorChange 0.5s ease-in-out forwards;
    }

    @keyframes colorChange {
      to {
        color: white;
      }
    }

  </style>
</head>
<body style="background-color: rgba(50, 50, 50, 1.0);">
  <div id="typing-container">
    <p id="typing-text"></p>
  </div>

  <p class="upload-paragraph">Upload or paste your resume below.</p>

  <%= form_for @resume, url: resume_index_path, html: { multipart: true } do |f| %>

    <div class="row">
      <div class="col-md-6 text-center">
        <div class="field rectangle">
          <div class="label-wrapper upload-label">
            <%= f.label :file, 'Upload Your Resume File' %>
          </div>
          <%= f.file_field :attachment %>
        </div>
      </div>

      <div class="col-md-6 text-center">
        <div class="field rectangle">
          <div class="label-wrapper">
            <%= f.label :resume_text, 'Paste Your Resume Text' %>
          </div>
          <%= f.text_area :resume_text, class: 'white-background' %>
        </div>
      </div>
    </div>

    <div class="row">
      <div class="col-md-12 text-center">
        <div class="field">
          <%= submit_tag "Upload Resume", class: 'btn', id: 'upload-button' %>
        </div>
      </div>
    </div>

  <% end %>

  <script>
    // Typing effect
    const text = "Meet Tailor AI, your go-to SaaS for personalized resumes that stand out effortlessly. Powered by ChatGPT 3.5, we refine your resume to match any job description. Just upload your resume, input the desired job details, and Tailor AI crafts a custom-fit resume. With an easy-to-use interface, you can fine-tune the results before downloading your perfectly tailored resume. Elevate your career prospects with Tailor AI â€“ where precision meets opportunity. Your dream job deserves a standout application, and Tailor AI ensures you're ahead of the curve.";

    let index = 0;
    const typingText = document.getElementById('typing-text');

    function type() {
      const char = text[index];
      const charSpan = document.createElement('span');
      charSpan.textContent = char;
      charSpan.className = 'typing-char';
      typingText.appendChild(charSpan);

      index++;

      if (index < text.length) {
        setTimeout(type, 30);
      }
    }

    type();
  </script>
</body>
</html>


